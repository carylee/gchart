<?php
// $Id$

/**
  * @file
  * Drupal Module: highcharts
  * Provides custom functionality for building highcharts
 */

/**
 * Implementation of hook_init()
 */
/*function highcharts_init() {
  drupal_add_js( drupal_get_path('module', 'highcharts') . '/js/highcharts.js');
}*/

function pr( $something ) {
  echo "<pre>";
  print_r($something);
  echo "</pre>";
  }

function highcharts_pieChart($vid, $skip=array()) {
  drupal_add_js( drupal_get_path('module', 'highcharts') . '/js/highcharts.js');
  drupal_add_js( drupal_get_path('module', 'highcharts') . '/js/highcharts.src.js');
	$vocab = taxonomy_vocabulary_load($vid);
	$vname = $vocab->name;
	$extendedValues = array();
	$children = highcharts_gettaxtree_nonnull($vid, $skip);
	$numChildren = count($children);
  foreach ($children as $term) {
    $currentChild++;
    $currChildName = $term->name;
    $currChildID = $term->tid;
    $fullDataArray[$currentChild]['name'] = $currChildName;
    $fullDataArray[$currentChild]['id'] = $currChildID;
    $fullDataArray[$currentChild]['count'] = taxonomy_term_count_nodes($term->tid);
  }
  usort($fullDataArray, "highcharts_cmp");
  //pr($fullDataArray);

  //drupal_add_js( '

  $data = '';
  foreach( $fullDataArray as $item ) {
    $data .= "{
            name: '" . $item['name'] . "',
            y: " . $item['count'] . ",
            },";
  }
  //echo $data;

$samplecode = <<<EOD
		$(document).ready(function() {
			var chart = new Highcharts.Chart({

				chart: {
					renderTo: 'chart-container',
					margin: [50, 200, 60, 170]
				},

				title: {
					text: 'Title of chart'
				},

				plotArea: {
					shadow: null,
					borderWidth: null,
					backgroundColor: null
				},

				tooltip: {
					formatter: function() {
						return '<b>'+ this.point.name +'</b>: '+ this.y +' %';
					}

				},

				plotOptions: {

					pie: {

						dataLabels: {

							enabled: true,
							formatter: function() {
								if (this.y > 5) return this.point.name;
							},
							color: 'black',
							style: {
								font: '1opx Trebuchet MS, Verdana, sans-serif'
							}
						}
					}
				},

				legend: {
					layout: 'vertical',
					style: {
						left: 'auto',
						bottom: 'auto',
						right: '50px',
						top: '100px'

					}

				},

            series: [{
					type: 'pie',
					name: 'Series name',
					data: [

EOD;

$samplecode .= $data;

$samplecode .= <<<EOD
					]
				}]
			});
		});
EOD;

  drupal_add_js( $samplecode, 'inline', 'header');
  echo "<div id='chart-container' style='height:600; width:640;'></div>";
}

// From Chris' Code
function highcharts_gettaxtree_nonnull($vid, $skip=''){
	$children = taxonomy_get_children(arg(2), $vid);
      if(!$children) {
        $custom_parent = taxonomy_get_parents(arg(2));
          $parent_tree = array();
          foreach ($custom_parent as $custom_child => $key) {
            $parent_tree = taxonomy_get_tree($vid, $key->tid);
          }
          $children = $parent_tree;
      }
   	foreach ($children as $key => $value){
   		
   		$nodeCount = taxonomy_term_count_nodes($value->tid);
		if ($nodeCount == 0){
			unset($children[$key]);
			
		} else {
		}
		if($value->tid == $skip[0]){
			unset($children[$key]);
		} else {
		}
	}
	$children = array_values($children);
    return $children;
}
/**
 * Sorts array by node count.
 */
function highcharts_cmp($a, $b)
{
    if ($a['count'] == $b['count']) {
        return 0;
    }
    return ($a['count'] > $b['count']) ? -1 : 1;
}
